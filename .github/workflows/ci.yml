name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}

      - uses: Swatinem/rust-cache@v2

      - name: Install libpcap
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libpcap-dev
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew install libpcap
          fi
        shell: bash

      - name: Run tests
        run: cargo test --all --verbose

      - name: Run tests (release)
        run: cargo test --all --release --verbose

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Clippy lints
        run: cargo clippy --all --all-targets -- -D warnings

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Install libpcap
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libpcap-dev
          elif [ "$RUNNER_OS" = "macOS" ]; then
            brew install libpcap
          fi
        shell: bash

      - name: Build release
        run: cargo build --release --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: membench-${{ matrix.os }}
          path: target/release/membench

  ebpf:
    name: eBPF Build (Linux only)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Install libpcap and eBPF dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpcap-dev llvm clang

      - name: Add bpfel target
        run: rustup target add bpfel-unknown-none

      - name: Build with eBPF feature
        run: cargo build --release --features ebpf --verbose

      - name: Test with eBPF feature
        run: cargo test --all --features ebpf --verbose
